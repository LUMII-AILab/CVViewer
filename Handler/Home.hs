{-# LANGUAGE TupleSections, OverloadedStrings #-}
module Handler.Home where

import Import hiding (Entity)
import EntityDB

getHomeR :: Handler Html
getHomeR = do
    results <- liftIO $ fetchEntityDataByID $ [1559976, 1560091, 1560102, 1560478, 1560495, 1560585, 1561151, 1561201, 1561241, 1561343, 1561468, 1561533, 1561619, 1561704, 1561920, 1561970, 1562094, 1562112, 1562226, 1562325, 1562343, 1562348, 1562462, 1562674, 1562958, 1563176, 1563381, 1565010, 1565782, 1567846, 1568840, 1569456, 1572029, 1574126, 1574828, 1574829, 1575614, 1575627, 1575673, 1575689, 1575990, 1576028, 1576160, 1576165, 1576529, 1576537, 1577582, 1578000, 1581090, 1581094, 1586718, 1586596, 1586761, 1586843, 1586639, 1586845, 1586560, 1586562, 1587054, 1586686, 1586687, 1586769, 1586606, 1586811, 1586730, 1587063, 1586613, 1586861, 1586577, 1586537, 1586824, 1586662, 1586949, 1587034, 1586625, 1587039, 1586794, 1586673, 1586592, 1586839]
    let entities = map (\(Entity nr _ names) -> (mainName names, nr)) results
    defaultLayout $(widgetFile "entityname")

-- non-partial replacement for classic head function
mainName :: [String] -> String
mainName (x:_) = x
mainName _ = ""
